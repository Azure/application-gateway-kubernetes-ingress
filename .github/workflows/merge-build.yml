name: "Merge Build"

on:
  push:
    branches:
      - master
      - release/*
  pull_request:
    branches:
      - master
      - release/*

permissions:
  actions: read
  contents: read
  deployments: read
  pull-requests: write  # Required to comment on PRs

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go workspace
        run: |
          shopt -s extglob
          shopt -s dotglob
        shell: bash

      - name: Install Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.11.0

      - name: Set up Go
        uses: actions/setup-go@v5.0.1
        with:
          go-version: '1.23.6'

      - name: Go and Helm lint check
        run: make lint-all

      - name: Go vet
        run: make vet-all

      - name: Get dependencies and build
        run: make build

      - name: Run unit tests with code coverage
        run: |
          go test -v -coverprofile=coverage.out ./... | tee >(go-junit-report > report.xml)
          go tool cover -func=coverage.out > coverage.txt

      - name: Publish test results
        if: always()
        uses: actions/upload-artifact@v4.3.3
        with:
          name: test-results
          path: report.xml

      - name: Publish code coverage results
        if: always()
        uses: actions/upload-artifact@v4.3.3
        with:
          name: code-coverage
          path: coverage.txt

      # âœ… Show Code Coverage Summary in GitHub Actions UI
      - name: Add Coverage Summary to GitHub Checks
        run: |
          echo "### ğŸ“Š Code Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "| File | Statements Covered | Missed |" >> $GITHUB_STEP_SUMMARY
          echo "|------|-------------------|--------|" >> $GITHUB_STEP_SUMMARY
          tail -n +2 coverage.txt | awk '{print "| " $1 " | " $2 " | " $3 " |"}' >> $GITHUB_STEP_SUMMARY

      # âœ… Comment code coverage as a table on PR
      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = 'coverage.txt';
            if (fs.existsSync(path)) {
              const lines = fs.readFileSync(path, 'utf8').split('\n').filter(line => line.trim() !== '');
              if (lines.length === 0) return;

              let comment = "### ğŸ“Š Code Coverage Report\n\n";
              comment += "| File | Statements Covered | Missed |\n";
              comment += "|------|-------------------|--------|\n";

              for (const line of lines.slice(1)) {  // Skip first line
                const parts = line.trim().split(/\s+/);
                if (parts.length < 3) continue;
                comment += `| ${parts[0]} | ${parts[1]} | ${parts[2]} |\n`;
              }

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
