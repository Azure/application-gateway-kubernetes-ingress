apiVersion: v1
kind: ConfigMap
metadata:
  name: catch-all
data:
  default.conf: |-
    server {
        listen 80 default_server;
        location / {
          return 200 "catch-all";
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catch-all
spec:
  selector:
    matchLabels:
      app: catch-all
  replicas: 1
  template:
    metadata:
      labels:
        app: catch-all
    spec:
      containers:
      - name: nginx
        imagePullPolicy: Always
        image: nginx:latest
        ports:
          - containerPort: 80
            name: http
        volumeMounts:
          - mountPath: /etc/nginx/conf.d
            name: configmap-volume
      volumes:
      - name: configmap-volume
        configMap:
          name: catch-all
---
apiVersion: v1
kind: Service
metadata:
  name: catch-all
spec:
  selector:
    app: catch-all
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: correct-app
data:
  default.conf: |-
    server {
        listen 80 default_server;
        location / {
          return 200 "correct-app";
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: correct-app
spec:
  selector:
    matchLabels:
      app: correct-app
  replicas: 1
  template:
    metadata:
      labels:
        app: correct-app
    spec:
      containers:
      - name: nginx
        imagePullPolicy: Always
        image: nginx:latest
        ports:
          - containerPort: 80
            name: http
        volumeMounts:
          - mountPath: /etc/nginx/conf.d
            name: configmap-volume
      volumes:
      - name: configmap-volume
        configMap:
          name: correct-app
---
apiVersion: v1
kind: Service
metadata:
  name: correct-app
spec:
  selector:
    app: correct-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/health-probe-path: /
spec:
  rules:
    - host: example.com
      http:
        paths:
          - path: /
            backend:
              service:
                name: catch-all
                port:
                  number: 80
            pathType: Prefix
          - path: /prefix
            backend:
              service:
                name: correct-app
                port:
                  number: 80
            pathType: Prefix
          - path: /prefix*
            backend:
              service:
                name: correct-app
                port:
                  number: 80
            pathType: Prefix
          - path: /exact
            backend:
              service:
                name: correct-app
                port:
                  number: 80
            pathType: Exact
          - path: /exact*
            backend:
              service:
                name: correct-app
                port:
                  number: 80
            pathType: Exact
          - path: /ims
            backend:
              service:
                name: correct-app
                port:
                  number: 80
            pathType: ImplementationSpecific
          - path: /ims*
            backend:
              service:
                name: correct-app
                port:
                  number: 80
            pathType: ImplementationSpecific
