trigger:
  tags:
    include:
    - '*'

pr: none

pool:
  vmImage: "ubuntu-latest"

variables:
  GOPATH: "$(system.defaultWorkingDirectory)/gopath"
  GOBIN: "$(GOPATH)/bin"
  modulePath: "$(GOPATH)/src/github.com/$(build.repository.name)"
  GOOS: "linux"
  GO111MODULE: "on"
  GO_PROJ: "github.com/Azure/$(build.repository.name)"

steps:
  - script: |
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      shopt -s extglob
      shopt -s dotglob
      mv !(gopath) '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    displayName: "Set up the Go workspace"

  - task: Docker@2
    displayName: Login to ACR
    inputs:
      command: login
      containerRegistry: "AGIC Registry"

  - script: |
      docker buildx create --use
      make build-image-multi-arch RELEASE_IMAGE=true PUSH_IMAGE=true
    workingDirectory: "$(modulePath)"
    displayName: "Build release image"

  - task: CopyFiles@2
    inputs:
      contents: |
        $(modulePath)/scripts/**
        $(modulePath)/helm/**
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: drop
