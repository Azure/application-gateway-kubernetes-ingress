{{- if required "A valid armAuth entry is required!" .Values.armAuth }}
{{- end}}

apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "application-gateway-kubernetes-ingress.fullname" . }}
  labels:
    app: {{ template "application-gateway-kubernetes-ingress.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "application-gateway-kubernetes-ingress.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "application-gateway-kubernetes-ingress.name" . }}
        release: {{ .Release.Name }}
        {{- if eq .Values.armAuth.type "aadPodIdentity"}}
        aadpodidbinding: {{ template "application-gateway-kubernetes-ingress.fullname" . }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "application-gateway-kubernetes-ingress.serviceaccountname" . }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: KUBERNETES_PORT_443_TCP_ADDR
            value: {{ required "aksClusterConfiguration.apiServerAddress is required" .Values.aksClusterConfiguration.apiServerAddress }}
          - name: KUBERNETES_PORT
            value: tcp://{{ required "aksClusterConfiguration.apiServerAddress is required" .Values.aksClusterConfiguration.apiServerAddress }}:443
          - name: KUBERNETES_PORT_443_TCP
            value: tcp://{{ required "aksClusterConfiguration.apiServerAddress is required" .Values.aksClusterConfiguration.apiServerAddress }}:443
          - name: KUBERNETES_SERVICE_HOST
            value: {{ required "aksClusterConfiguration.apiServerAddress is required" .Values.aksClusterConfiguration.apiServerAddress }}
          {{- if eq .Values.armAuth.type "servicePrincipal"}}
          - name: AZURE_AUTH_LOCATION
            value: /etc/Azure/Networking-AppGW/auth/{{ required "armAuth.secretKey is required if using servicePrincipal" .Values.armAuth.secretKey }}
          {{- end}}
        envFrom:
        - configMapRef:
            name: {{ template "application-gateway-kubernetes-ingress.configmapname" . }}
        {{- if eq .Values.armAuth.type "servicePrincipal"}}
        volumeMounts:
          - name: {{ required "armAuth.secretName is required if using servicePrincipal" .Values.armAuth.secretName }}-mount
            mountPath: /etc/Azure/Networking-AppGW/auth
            readOnly: true
        {{- end}}
      {{- if eq .Values.armAuth.type "servicePrincipal"}}
      volumes:
        - name: {{ .Values.armAuth.secretName }}-mount
          secret:
            secretName: {{ .Values.armAuth.secretName }}
      {{- end}}
